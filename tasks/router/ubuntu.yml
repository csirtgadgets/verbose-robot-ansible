---

- name: configure /etc/security/limits.conf
  lineinfile: dest=/etc/security/limits.conf line="cif             soft    nofile            20000"

- name: configure /etc/security/limits.conf
  lineinfile: dest=/etc/security/limits.conf line="cif             hard    nofile            30000"

# bind 9
- name: Install bind9
  apt: pkg=bind9 state=present update_cache=true cache_valid_time=86400

- name: "Setting named.conf.options"
  copy: src=router/ubuntu/bind_named.conf.options dest=/etc/bind/named.conf.options

- name: "Setting named.conf.local"
  copy: src=router/ubuntu/bind_named.conf.local dest=/etc/bind/named.conf.local

- name: "Setting dhclient.conf"
  copy: src=router/ubuntu/bind_dhclient.conf dest=/etc/dhcp/dhclient.conf

- name: "Setting /etc/resolvconf/resolv.conf.d/base"
  copy: src=router/ubuntu/bind_head dest=/etc/resolvconf/resolv.conf.d/head

- name: 'copying bind9 default'
  copy: src=router/ubuntu/bind_default dest=/etc/default/bind9

- name: enable services at boot
  systemd: name=bind9 enabled=yes state=restarted daemon_reload=yes
  when: NO_SERVICES is undefined or NO_SERVICES == 'no'

- name: Restart Network
  # Restart the network, sleep 3 seconds, return the
  # exit code returned by "service network restart".
  # This is to work-around a glitch in Ansible where
  # it detects a successful network restart as a failure.
  command: perl -e 'my $exit_code = system("service networking restart"); sleep 3; $exit_code = $exit_code >> 8; exit($exit_code);'
  when: DOCKER_BUILD is undefined or DOCKER_BUILD == "no"

- name: Update resolvconf
  command: resolvconf -u


